=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
DOING
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Replacing ajax login with socket.io
Experimenting using only socket.io for all server/client communication.
  Removing ajax calls in main.js
  Commeting out unneccesary Express middleware

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
TODO
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
- test public/static (view-models) with fake socket
  - configure all socket events
  - view-models: use constructor instead of singleton,
    - it is easier to dispose an instance than reset singleton state

- client:
  - enter/leave room
  - register in room table

- rename socket events with prefix?
  - rename test/sockets/events* / split files
  - document sockets events

- pass userMgr and roomMgr to sockets/events and routes/config

- When logged in
  - Rooms with open table (not start)
    - Enable button to enter
    - Game flow

- remove room: warning if status is open

- CLI to manipulate io in server?

- web server, validate API
  - return error || emit error event <- TODOs

- infrastructure/room-mgr: remove room when its table's status is not open or start
- Client session, reconnections / refresh
  - cookies? socket.io handshake?
- infrastructure/room-mgr: save one room per file?

- Validate actions in Round

- replace should.js with chai.js for consistency between node and browser?

- integration-steps
  - turn, river
  - end of table

- when to save room state?
  - after 'round-next' (preflop <> flop, turn, river)

- Poker
  - Tie, pot distribution
  - Define how blinds increase (when and how)
  - Multiple pots (all ins)
  - Player inactive, automatic checks/folds
  - Game status: all players are All in, show hands

- Remove views? routes? || remove express?
  - jade dependency

- Acceptance test / automate browser (CasperJS)
- Code analysis (Plato)?

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Notes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
socket.io-client holds off emits until socket connects
Socket connects first and then login:

  var socket = io.connect();
  console.log('pre-connect');
  socket.on('connect', function() {
    console.log('connect');
  });
  var login = {
    name    : 'miki',
    password: 'pass'
  };
  console.log('pre-login');
  socket.emit('login', login, function(loginRet) {
    console.log('login');
  });

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
CasperJS
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Installation:
  cd node_modules
  git clone git://github.com/n1k0/casperjs.git
  cd casperjs
  git checkout tags/1.0.2

Execution
  node_modules/casperjs/bin/casperjs node_modules/casperjs/samples/each.js

Symbolic link in node_modules/.bin?