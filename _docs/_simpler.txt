=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
DOING
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
* shorten property names
    Tournament.registeredPlayers  -> players
    Tournament.currentGame        -> game
    Game.currentRound             -> round
    Game.gamePlayers              -> handsInfo
    Round.roundPlayers            -> actionsInfo
* initial state in constructors: default or json
* deserialization
* parameters in constructors: reference to parent object
* remove irrelevant classes (Player)
* Remove check for new in constructors

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
TO DO
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
+ Round.nextPosition
+ RoomManager
+ sockets

- flow.spec -> integration.spec: +[1,12], -[12next]
  + sub-directory -> nested describe
  + finalState modified in process.nextTick()
    + nextStep: initialStep should be clean
  - Step 12: assert after 'round-start' event
    - 'next-position' event?
  - test only one file/directory?

- flow.spec -> events-seq.spec

- validate actions in Round