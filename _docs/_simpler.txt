=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
DOING
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
- shorten property names
- shorten depth of tournament
  - currentGame child of tournament- simplify creation of objects
- initial state in classes: default or json
- deserialization
- parameters in constructors
  - reference to parent object?
- remove irrelevant classes (Player)
- Remove check for new in constructors

- manipulate Tournament.players consistently (Tournament, Game, Round)

- var keys = Object.keys

- rename
    Tournament.registeredPlayers  -> players
    Tournament.currentGame        -> game
    Game.currentRound             -> round

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
TO DO
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
+ Round.nextPosition
- RoomManager
- flow.spec -> integration